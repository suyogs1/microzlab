[
  {
    "id": "sum-array",
    "title": "Sum Array Elements",
    "prompt": "Calculate the sum of all numbers in an array using assembly language.",
    "signature": {
      "asm": "; Input: Array at memory location 0x1000, length in R0\n; Output: Sum in R0"
    },
    "starter": {
      "asm": "; Store array [1, 2, 3, 4, 5] at address 1000\nMOV R0, #1\nSTORE [1000], R0\nMOV R0, #2\nSTORE [1002], R0\nMOV R0, #3\nSTORE [1004], R0\nMOV R0, #4\nSTORE [1006], R0\nMOV R0, #5\nSTORE [1008], R0\n\n; TODO: Sum the array\nMOV R0, #0      ; sum\nMOV R1, #1000   ; pointer\nMOV R2, #5      ; count\n; Your loop here\nHALT"
    },
    "tests": [
      { "input": [[1, 2, 3]], "output": 6 },
      { "input": [[5]], "output": 5 },
      { "input": [[10, 20, 30]], "output": 60 }
    ],
    "explain": "Use loop with pointer arithmetic and accumulator register."
  },
  {
    "id": "find-max",
    "title": "Find Maximum Value",
    "prompt": "Find the largest number in an array using assembly language.",
    "signature": {
      "asm": "; Input: Array at memory location 0x1000, length in R0\n; Output: Maximum value in R0"
    },
    "starter": {
      "asm": "; Store array [3, 7, 2, 9, 1] at address 2000\nMOV R0, #3\nSTORE [2000], R0\nMOV R0, #7\nSTORE [2002], R0\nMOV R0, #2\nSTORE [2004], R0\nMOV R0, #9\nSTORE [2006], R0\nMOV R0, #1\nSTORE [2008], R0\n\n; TODO: Find maximum\nMOV R1, #2000   ; pointer\nLOAD R0, [R1]   ; current max\nMOV R2, #4      ; remaining elements\n; Your loop here\nHALT"
    },
    "tests": [
      { "input": [[1, 3, 2]], "output": 3 },
      { "input": [[5]], "output": 5 },
      { "input": [[10, 20, 5, 30]], "output": 30 }
    ],
    "explain": "Compare each element with current maximum using conditional jumps."
  },
  {
    "id": "factorial",
    "title": "Calculate Factorial",
    "prompt": "Calculate the factorial of a number using assembly language.",
    "signature": {
      "asm": "; Input: Number in R0\n; Output: Factorial in R0"
    },
    "starter": {
      "asm": "; Calculate factorial of 5\nMOV R0, #5      ; number\nMOV R1, #1      ; result\n; TODO: Implement factorial loop\n; result = result * number\n; number = number - 1\n; repeat until number = 0\nHALT"
    },
    "tests": [
      { "input": [5], "output": 120 },
      { "input": [3], "output": 6 },
      { "input": [1], "output": 1 }
    ],
    "explain": "Use multiplication and decrement in a loop until counter reaches zero."
  }
]